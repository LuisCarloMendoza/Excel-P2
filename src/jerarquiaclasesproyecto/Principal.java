/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jerarquiaclasesproyecto;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.event.MouseEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author luiscarlomendoza
 */
public class Principal extends javax.swing.JFrame {

    ArrayList <Celda> seleccionCeldas = new ArrayList();
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();

        this.setLocationRelativeTo(null);

        AddColumnas();
        AddFilas();

        DefaultTableModel modelo1 = (DefaultTableModel) Jtable_Main.getModel();
        for (int i = 1; i < modelo1.getColumnCount(); i++) {
            for (int j = 0; j < modelo1.getRowCount(); j++) {
                modelo1.setValueAt("", j, i);
            }
        }

        Jtable_Main.setModel(modelo1);

        Jtable_Main.setShowHorizontalLines(true);
        Jtable_Main.setShowVerticalLines(true);
        Jtable_Main.setGridColor(Color.black);
        Jtable_Main.setColumnSelectionAllowed(true);
        Jtable_Main.setCellSelectionEnabled(true);
        Jtable_Main.setShowGrid(true);
        Jtable_Main.setSelectionBackground(Color.GREEN);

        JTableHeader header = Jtable_Main.getTableHeader();
        Font font = new Font("Tahome", Font.BOLD, 14);
        header.setFont(font);
        Jtable_Main.setTableHeader(header);

        adminProjects ap = new adminProjects("./Proyectos.cbm");
        ap.cargarArchivo();
        proyectos = ap.getProyectos();

        if (!proyectos.isEmpty()) {
            DefaultComboBoxModel modelo = (DefaultComboBoxModel) jcb_proyectos.getModel();
            for (int i = 0; i < proyectos.size(); i++) {
                modelo.addElement(proyectos.get(i));
            }
            jcb_proyectos.setModel(modelo);
        }

        doc = tp_texto.getStyledDocument();
        estilo = tp_texto.addStyle("miEstilo", null);
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) jcb_StyleFormat.getModel();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String fontNames[] = ge.getAvailableFontFamilyNames();
        for (int i = 0; i < fontNames.length; i++) {
            modelo.addElement(fontNames[i]);
        }
        jcb_StyleFormat.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Popup_tabla = new javax.swing.JPopupMenu();
        jMenuItem_seleccionar = new javax.swing.JMenuItem();
        jMenuItem_vaciarSeleccion = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_Copiar = new javax.swing.JMenuItem();
        jMenuItem_Pegar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_suma = new javax.swing.JMenuItem();
        jMenuItem_resta = new javax.swing.JMenuItem();
        jMenuItem_multiplicacion = new javax.swing.JMenuItem();
        jMenuItem_division = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_Promedio = new javax.swing.JMenuItem();
        jMenuItem_numeroAleatorio = new javax.swing.JMenuItem();
        jMenuItem_exponenciar = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_referenciar = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_Graficar = new javax.swing.JMenuItem();
        jFrame_Test = new javax.swing.JFrame();
        jcb_hojas = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Jtable_Main = new Tabla();
        jButton_crearHoja = new javax.swing.JButton();
        jButton_guardar = new javax.swing.JButton();
        jButton_cargar = new javax.swing.JButton();
        jButton_guardarProyecto = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tp_texto = new javax.swing.JTextPane();
        jToolBar_EstiloCelda = new javax.swing.JToolBar();
        jcb_StyleFormat = new javax.swing.JComboBox<>();
        jcb_sizeString = new javax.swing.JComboBox<>();
        jButton_negrita = new javax.swing.JButton();
        jButton_cursiva = new javax.swing.JButton();
        jButton_subrayar = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jButton_fondo = new javax.swing.JButton();
        jButton_letra = new javax.swing.JButton();
        jButton_aplicarCelda = new javax.swing.JButton();
        jButton_VaciarHoja = new javax.swing.JButton();
        jButton_fx = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_Archivo = new javax.swing.JMenu();
        jMenuItem_guardarProyecto = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_CrearNuevaHoja = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_GuardarHoja = new javax.swing.JMenuItem();
        jMenuItem_CargarHoja = new javax.swing.JMenuItem();
        jMenu_Texto = new javax.swing.JMenu();
        jMenuItem_guardarCSV = new javax.swing.JMenuItem();
        jMenuItem_cargarCSV = new javax.swing.JMenuItem();
        jd_opcionesGraficos = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jb_barra = new javax.swing.JButton();
        jb_pastel = new javax.swing.JButton();
        jb_lineal = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jd_grafico = new javax.swing.JDialog();
        jpanel_grafico = new javax.swing.JPanel();
        jMenu1 = new javax.swing.JMenu();
        Popup_Column = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jd_funciones = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        jButton_siSiNo = new javax.swing.JButton();
        jButton_buscarV = new javax.swing.JButton();
        jButton_buscarH = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jd_buscarV = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField_valorBuscado = new javax.swing.JTextField();
        jTextField_columnaBuscaV = new javax.swing.JTextField();
        jButton_buscarEnV = new javax.swing.JButton();
        jd_buscarH = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField_valorBuscadoH = new javax.swing.JTextField();
        jTextField_filaBuscaH = new javax.swing.JTextField();
        jButton_buscarEnH = new javax.swing.JButton();
        jButton_crearProyecto = new javax.swing.JButton();
        jButton_cargarProyecto = new javax.swing.JButton();
        jcb_proyectos = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel_fecha = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel_creador = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jMenuItem_seleccionar.setText("Seleccionar Celdas");
        jMenuItem_seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_seleccionarActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_seleccionar);

        jMenuItem_vaciarSeleccion.setText("Vaciar Selecci√≥n");
        jMenuItem_vaciarSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_vaciarSeleccionActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_vaciarSeleccion);
        Popup_tabla.add(jSeparator4);

        jMenuItem_Copiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.META_DOWN_MASK));
        jMenuItem_Copiar.setText("Copiar");
        jMenuItem_Copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CopiarActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_Copiar);

        jMenuItem_Pegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.META_DOWN_MASK));
        jMenuItem_Pegar.setText("Pegar");
        jMenuItem_Pegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_PegarActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_Pegar);
        Popup_tabla.add(jSeparator1);

        jMenuItem_suma.setText("Sumar");
        jMenuItem_suma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_sumaActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_suma);

        jMenuItem_resta.setText("Restar");
        jMenuItem_resta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_restaActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_resta);

        jMenuItem_multiplicacion.setText("Multiplicar");
        jMenuItem_multiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_multiplicacionActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_multiplicacion);

        jMenuItem_division.setText("Dividir");
        jMenuItem_division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_divisionActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_division);
        Popup_tabla.add(jSeparator2);

        jMenuItem_Promedio.setText("Promedio");
        jMenuItem_Promedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_PromedioActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_Promedio);

        jMenuItem_numeroAleatorio.setText("Numero Aleatorio");
        jMenuItem_numeroAleatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_numeroAleatorioActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_numeroAleatorio);

        jMenuItem_exponenciar.setText("Exponenciar");
        jMenuItem_exponenciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_exponenciarActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_exponenciar);
        Popup_tabla.add(jSeparator3);

        jMenuItem_referenciar.setText("Referenciar Celda");
        jMenuItem_referenciar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem_referenciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_referenciarActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_referenciar);
        Popup_tabla.add(jSeparator8);

        jMenuItem_Graficar.setText("Graficar");
        jMenuItem_Graficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_GraficarActionPerformed(evt);
            }
        });
        Popup_tabla.add(jMenuItem_Graficar);

        jFrame_Test.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jFrame_TestWindowClosed(evt);
            }
        });

        jcb_hojas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcb_hojasMouseClicked(evt);
            }
        });

        Jtable_Main.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ));
        Jtable_Main.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Jtable_MainMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Jtable_Main);

        jButton_crearHoja.setText("Crear Nueva Hoja");
        jButton_crearHoja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_crearHoja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_crearHojaMouseClicked(evt);
            }
        });

        jButton_guardar.setText("Guardar Hoja");
        jButton_guardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_guardarMouseClicked(evt);
            }
        });

        jButton_cargar.setText("Cargar Hoja");
        jButton_cargar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_cargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_cargarMouseClicked(evt);
            }
        });

        jButton_guardarProyecto.setText("Guardar Proyecto");
        jButton_guardarProyecto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_guardarProyecto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_guardarProyectoMouseClicked(evt);
            }
        });

        tp_texto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tp_textoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tp_texto);

        jToolBar_EstiloCelda.setRollover(true);

        jcb_StyleFormat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcb_StyleFormatItemStateChanged(evt);
            }
        });
        jToolBar_EstiloCelda.add(jcb_StyleFormat);

        jcb_sizeString.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "18", "24", "36", "48", "60", "72" }));
        jcb_sizeString.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_sizeStringActionPerformed(evt);
            }
        });
        jToolBar_EstiloCelda.add(jcb_sizeString);

        jButton_negrita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jerarquiaclasesproyecto/negrita.png"))); // NOI18N
        jButton_negrita.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_negrita.setFocusable(false);
        jButton_negrita.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_negrita.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_negrita.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_negritaMouseClicked(evt);
            }
        });
        jToolBar_EstiloCelda.add(jButton_negrita);

        jButton_cursiva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jerarquiaclasesproyecto/Cursiva.png"))); // NOI18N
        jButton_cursiva.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_cursiva.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_cursiva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_cursivaMouseClicked(evt);
            }
        });
        jToolBar_EstiloCelda.add(jButton_cursiva);

        jButton_subrayar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jerarquiaclasesproyecto/Subrayado.png"))); // NOI18N
        jButton_subrayar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_subrayar.setFocusable(false);
        jButton_subrayar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_subrayar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_subrayar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_subrayarMouseClicked(evt);
            }
        });
        jToolBar_EstiloCelda.add(jButton_subrayar);
        jToolBar_EstiloCelda.add(jSeparator5);

        jButton_fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jerarquiaclasesproyecto/fondo.png"))); // NOI18N
        jButton_fondo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_fondo.setFocusable(false);
        jButton_fondo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_fondo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_fondo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_fondoMouseClicked(evt);
            }
        });
        jToolBar_EstiloCelda.add(jButton_fondo);

        jButton_letra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jerarquiaclasesproyecto/letra.png"))); // NOI18N
        jButton_letra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_letra.setFocusable(false);
        jButton_letra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_letra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_letra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_letraMouseClicked(evt);
            }
        });
        jToolBar_EstiloCelda.add(jButton_letra);

        jButton_aplicarCelda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jerarquiaclasesproyecto/add-list (1).png"))); // NOI18N
        jButton_aplicarCelda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_aplicarCelda.setFocusable(false);
        jButton_aplicarCelda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_aplicarCelda.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton_aplicarCelda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_aplicarCeldaMouseClicked(evt);
            }
        });
        jToolBar_EstiloCelda.add(jButton_aplicarCelda);

        jButton_VaciarHoja.setText("Vaciar Hoja");
        jButton_VaciarHoja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_VaciarHoja.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_VaciarHojaMouseClicked(evt);
            }
        });

        jButton_fx.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jerarquiaclasesproyecto/fx.png"))); // NOI18N
        jButton_fx.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_fx.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_fxMouseClicked(evt);
            }
        });

        jMenu_Archivo.setText("Archivo");

        jMenuItem_guardarProyecto.setText("Guardar Proyecto");
        jMenuItem_guardarProyecto.setToolTipText("");
        jMenuItem_guardarProyecto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem_guardarProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_guardarProyectoActionPerformed(evt);
            }
        });
        jMenu_Archivo.add(jMenuItem_guardarProyecto);
        jMenu_Archivo.add(jSeparator6);

        jMenuItem_CrearNuevaHoja.setText("Crear Hoja");
        jMenuItem_CrearNuevaHoja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem_CrearNuevaHoja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CrearNuevaHojaActionPerformed(evt);
            }
        });
        jMenu_Archivo.add(jMenuItem_CrearNuevaHoja);
        jMenu_Archivo.add(jSeparator7);

        jMenuItem_GuardarHoja.setText("Guardar Hoja");
        jMenuItem_GuardarHoja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_GuardarHojaActionPerformed(evt);
            }
        });
        jMenu_Archivo.add(jMenuItem_GuardarHoja);

        jMenuItem_CargarHoja.setText("Cargar Hoja");
        jMenuItem_CargarHoja.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem_CargarHoja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CargarHojaActionPerformed(evt);
            }
        });
        jMenu_Archivo.add(jMenuItem_CargarHoja);

        jMenuBar1.add(jMenu_Archivo);

        jMenu_Texto.setText("Texto");

        jMenuItem_guardarCSV.setText("Guardar CSV");
        jMenuItem_guardarCSV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem_guardarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_guardarCSVActionPerformed(evt);
            }
        });
        jMenu_Texto.add(jMenuItem_guardarCSV);

        jMenuItem_cargarCSV.setText("Cargar CSV");
        jMenuItem_cargarCSV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem_cargarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_cargarCSVActionPerformed(evt);
            }
        });
        jMenu_Texto.add(jMenuItem_cargarCSV);

        jMenuBar1.add(jMenu_Texto);

        jFrame_Test.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout jFrame_TestLayout = new javax.swing.GroupLayout(jFrame_Test.getContentPane());
        jFrame_Test.getContentPane().setLayout(jFrame_TestLayout);
        jFrame_TestLayout.setHorizontalGroup(
            jFrame_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jFrame_TestLayout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jButton_cargar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_guardar)
                .addGap(27, 27, 27)
                .addComponent(jcb_hojas, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton_crearHoja, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_guardarProyecto)
                .addGap(29, 29, 29)
                .addComponent(jButton_VaciarHoja)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame_TestLayout.createSequentialGroup()
                .addContainerGap(208, Short.MAX_VALUE)
                .addComponent(jButton_fx, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jToolBar_EstiloCelda, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(490, 490, 490))
        );
        jFrame_TestLayout.setVerticalGroup(
            jFrame_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame_TestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jFrame_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_crearHoja)
                        .addComponent(jButton_guardar)
                        .addComponent(jButton_cargar)
                        .addComponent(jButton_guardarProyecto)
                        .addComponent(jButton_VaciarHoja))
                    .addComponent(jcb_hojas, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jFrame_TestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar_EstiloCelda, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_fx, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
        );

        jd_opcionesGraficos.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 3, 24)); // NOI18N
        jLabel1.setText("Graficos");
        jd_opcionesGraficos.getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 105, -1));

        jb_barra.setText("Barra");
        jb_barra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_barra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_barraMouseClicked(evt);
            }
        });
        jd_opcionesGraficos.getContentPane().add(jb_barra, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 110, -1));

        jb_pastel.setText("Pastel");
        jb_pastel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_pastel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_pastelMouseClicked(evt);
            }
        });
        jd_opcionesGraficos.getContentPane().add(jb_pastel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 110, -1));

        jb_lineal.setText("Lineal");
        jb_lineal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jb_lineal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_linealMouseClicked(evt);
            }
        });
        jd_opcionesGraficos.getContentPane().add(jb_lineal, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, 110, -1));
        jd_opcionesGraficos.getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jerarquiaclasesproyecto/output-onlinepngtools.png"))); // NOI18N
        jd_opcionesGraficos.getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 350));

        javax.swing.GroupLayout jpanel_graficoLayout = new javax.swing.GroupLayout(jpanel_grafico);
        jpanel_grafico.setLayout(jpanel_graficoLayout);
        jpanel_graficoLayout.setHorizontalGroup(
            jpanel_graficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 728, Short.MAX_VALUE)
        );
        jpanel_graficoLayout.setVerticalGroup(
            jpanel_graficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 523, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jd_graficoLayout = new javax.swing.GroupLayout(jd_grafico.getContentPane());
        jd_grafico.getContentPane().setLayout(jd_graficoLayout);
        jd_graficoLayout.setHorizontalGroup(
            jd_graficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpanel_grafico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd_graficoLayout.setVerticalGroup(
            jd_graficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpanel_grafico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");
        Popup_Column.add(jMenuItem1);

        jd_funciones.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel7.setText("Funciones");
        jd_funciones.getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        jButton_siSiNo.setText("Si-Entonces");
        jButton_siSiNo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jd_funciones.getContentPane().add(jButton_siSiNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 140, -1));

        jButton_buscarV.setText("BuscarV");
        jButton_buscarV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_buscarV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_buscarVMouseClicked(evt);
            }
        });
        jd_funciones.getContentPane().add(jButton_buscarV, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 140, -1));

        jButton_buscarH.setText("BuscarH");
        jButton_buscarH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_buscarH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_buscarHMouseClicked(evt);
            }
        });
        jd_funciones.getContentPane().add(jButton_buscarH, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 140, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jerarquiaclasesproyecto/output-onlinepngtools.png"))); // NOI18N
        jd_funciones.getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, -1));

        jd_buscarV.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("BuscarV");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Valor Buscado");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Columna");

        jButton_buscarEnV.setText("Buscar");
        jButton_buscarEnV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_buscarEnV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_buscarEnVMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_columnaBuscaV, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_valorBuscado, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jButton_buscarEnV)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField_valorBuscado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField_columnaBuscaV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton_buscarEnV)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jd_buscarV.getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 180));

        jd_buscarH.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("BuscarH");

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Valor Buscado");

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Fila");

        jButton_buscarEnH.setText("Buscar");
        jButton_buscarEnH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_buscarEnH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_buscarEnHMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jLabel13))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_filaBuscaH, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_valorBuscadoH, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jButton_buscarEnH)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField_valorBuscadoH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField_filaBuscaH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton_buscarEnH)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jd_buscarH.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 180));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_crearProyecto.setText("Crear Proyecto");
        jButton_crearProyecto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_crearProyecto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_crearProyectoMouseClicked(evt);
            }
        });
        getContentPane().add(jButton_crearProyecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 130, -1));

        jButton_cargarProyecto.setText("Cargar Proyecto");
        jButton_cargarProyecto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton_cargarProyecto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_cargarProyectoMouseClicked(evt);
            }
        });
        getContentPane().add(jButton_cargarProyecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 130, -1));

        jcb_proyectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcb_proyectosActionPerformed(evt);
            }
        });
        getContentPane().add(jcb_proyectos, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 250, -1));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setText("Proyectos Existentes");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        jLabel11.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel11.setText("Fecha de Creaci√≥n:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 120, 20));

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel12.setText("MiniExcel");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, -1, -1));

        jLabel_fecha.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel_fecha.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_fecha.setText("Fecha");
        getContentPane().add(jLabel_fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, -1, -1));

        jLabel14.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel14.setText("Creador:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, -1));

        jLabel_creador.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel_creador.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_creador.setText("Creador");
        getContentPane().add(jLabel_creador, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jerarquiaclasesproyecto/output-onlinepngtools.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_CopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CopiarActionPerformed
        // TODO add your handling code here:
        Copiar();
    }//GEN-LAST:event_jMenuItem_CopiarActionPerformed

    private void jMenuItem_PegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_PegarActionPerformed
        // TODO add your handling code here:
        Pegar();
    }//GEN-LAST:event_jMenuItem_PegarActionPerformed

    private void jButton_crearHojaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_crearHojaMouseClicked
        // TODO add your handling code here:
        jcb_hojas.removeAllItems();
        String s = JOptionPane.showInputDialog(jFrame_Test, "Ingrese el nombre de la Hoja");
        proyectoActual.generarTabla(s);
        DefaultComboBoxModel modeloCB = (DefaultComboBoxModel) jcb_hojas.getModel();
        for (int i = 0; i < proyectoActual.getTablas().size(); i++) {
            modeloCB.addElement(proyectoActual.getTablas().get(i));
        }
        jcb_hojas.setModel(modeloCB);


    }//GEN-LAST:event_jButton_crearHojaMouseClicked

    private void jButton_crearProyectoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_crearProyectoMouseClicked
        // TODO add your handling code here:
        String nombre = JOptionPane.showInputDialog(this, "Ingrese el nombre del Proyecto");
        String creador = JOptionPane.showInputDialog(this, "Ingrese el creador del Proyecto");
        Date fechaCreacion = new Date();
        ProjectTest newProject = new ProjectTest(nombre, creador, fechaCreacion);
        String s = JOptionPane.showInputDialog(this, "Ingrese el nombre de la primera hoja");
        proyectos.add(newProject);
        proyectoActual = newProject;
        proyectoActual.generarTabla(s);

        DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
        for (int i = 0; i < modelo.getColumnCount(); i++) {
            for (int j = 0; j < modelo.getRowCount(); j++) {
                modelo.setValueAt(proyectoActual.getTablas().get(0).getValueAt(j, i), j, i);
            }
        }
        Jtable_Main.setModel(modelo);

        jcb_hojas.removeAllItems();
        DefaultComboBoxModel modeloCB = (DefaultComboBoxModel) jcb_hojas.getModel();
        modeloCB.addElement(proyectoActual.getTablas().get(0));
        jcb_hojas.setModel(modeloCB);

        jFrame_Test.setVisible(true);
        jFrame_Test.setExtendedState(MAXIMIZED_BOTH);


    }//GEN-LAST:event_jButton_crearProyectoMouseClicked

    private void jButton_guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_guardarMouseClicked
        // TODO add your handling code here:
        DefaultComboBoxModel modeloCB = (DefaultComboBoxModel) jcb_hojas.getModel();
        for (int i = 0; i < proyectoActual.getTablas().size(); i++) {
            if (((Tabla) modeloCB.getElementAt(jcb_hojas.getSelectedIndex())).getCodigo().equals(proyectoActual.getTablas().get(i).getCodigo())) {
                DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
                proyectoActual.getTablas().get(i).getCeldas().clear();
                for (int k = 0; k < modelo.getColumnCount(); k++) {
                    for (int l = 0; l < modelo.getRowCount(); l++) {
                        proyectoActual.getTablas().get(i).setValueAt(modelo.getValueAt(l, k), l, k);
                        proyectoActual.getTablas().get(i).getCeldas().add(new Celda(k, l, modelo.getValueAt(l, k).toString()));
                    }
                }
            }

        }

        JOptionPane.showMessageDialog(jFrame_Test, "Se guardo la hoja con √©xito");

    }//GEN-LAST:event_jButton_guardarMouseClicked

    private void jcb_hojasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcb_hojasMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelo1 = (DefaultTableModel) Jtable_Main.getModel();
        for (int i = 1; i < modelo1.getColumnCount(); i++) {
            for (int j = 0; j < modelo1.getRowCount(); j++) {
                modelo1.setValueAt("", j, i);
            }
        }

        Jtable_Main.setModel(modelo1);

    }//GEN-LAST:event_jcb_hojasMouseClicked

    private void jButton_cargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_cargarMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
        for (int i = 0; i < modelo.getColumnCount(); i++) {
            for (int j = 0; j < modelo.getRowCount(); j++) {
                modelo.setValueAt(proyectoActual.getTablas().get(jcb_hojas.getSelectedIndex()).getValueAt(j, i), j, i);
            }
        }
        Jtable_Main.setModel(modelo);

    }//GEN-LAST:event_jButton_cargarMouseClicked

    private void Jtable_MainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Jtable_MainMouseClicked
        // TODO add your handling code here:
        if (Jtable_Main.getSelectedRow() >= 0) {
            if (evt.getButton() == 3) {
                Popup_tabla.show(Jtable_Main, evt.getX(), evt.getY());
            }
        }

    }//GEN-LAST:event_Jtable_MainMouseClicked

    private void jMenuItem_sumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_sumaActionPerformed
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aun no hay celdas seleccionadas");
        } else {
            DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
            int bandera = 0;
            double n = 0;
            for (int i = 0; i < seleccionGlobal.size(); i++) {
                if (isNumeric(seleccionGlobal.get(i).toString())) {
                    n += Double.parseDouble(seleccionGlobal.get(i).toString());
                } else {
                    bandera++;
                }
            }

            if (bandera > 0) {
                JOptionPane.showMessageDialog(this, "Una de las celdas seleccionadas no era numerica");
            } else {
                modelo.setValueAt(n, Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
            }
        }

    }//GEN-LAST:event_jMenuItem_sumaActionPerformed

    private void jMenuItem_seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_seleccionarActionPerformed
        // TODO add your handling code here:

        DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
        if (Jtable_Main.getSelectedColumns().length == 1) {
            for (int i = 0; i < Jtable_Main.getSelectedColumns().length; i++) {
                for (int j = 0; j < Jtable_Main.getSelectedRows().length; j++) {
                    seleccionGlobal.add(modelo.getValueAt(Jtable_Main.getSelectedRows()[j], Jtable_Main.getSelectedColumns()[i]).toString());
                    modelo.getColumnName(Jtable_Main.getSelectedColumns()[i]);
                    int rowN = Jtable_Main.getSelectedRows()[j] + 1;
                    int row = Jtable_Main.getSelectedRows()[j];
                    int column = Jtable_Main.getSelectedColumns()[i];
                    String nombre = "" + modelo.getColumnName(Jtable_Main.getSelectedColumns()[i]) + rowN;
                    String valor = modelo.getValueAt(Jtable_Main.getSelectedRows()[j], Jtable_Main.getSelectedColumns()[i]).toString();
                    Celda c = new Celda(nombre, column, row, valor);
                    seleccionCeldas.add(c);  
                }
            }
        } else {
            initialColumn = Jtable_Main.getSelectedColumns()[0];
            finalColumn = Jtable_Main.getSelectedColumns()[Jtable_Main.getSelectedColumns().length - 1];
            initialRow = Jtable_Main.getSelectedRows()[0];
            finalRow = Jtable_Main.getSelectedRows()[Jtable_Main.getSelectedRows().length - 1];
            for (int i = 0; i < Jtable_Main.getSelectedColumns().length; i++) {
                ArrayList<String> array = new ArrayList();
                for (int j = 0; j < Jtable_Main.getSelectedRows().length; j++) {
                    array.add(modelo.getValueAt(Jtable_Main.getSelectedRows()[j], Jtable_Main.getSelectedColumns()[i]).toString());
                }
                matrix.add(array);
            }
//
//            for (int i = 0; i < matrix.size(); i++) {
//                for (int j = 0; j < matrix.get(i).size(); j++) {
//                    System.out.print(matrix.get(i).get(j) + " ");
//                }
//                System.out.println("");
//            }
        }

//        seleccionGlobal.add(modelo.getValueAt(Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn()));

    }//GEN-LAST:event_jMenuItem_seleccionarActionPerformed

    private void jMenuItem_vaciarSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_vaciarSeleccionActionPerformed
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty() && matrix.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay nada seleccionado");
        } else {
            seleccionGlobal.clear();
            matrix.clear();
            initialColumn = 0;
            finalColumn = 0;
            initialRow = 0;
            finalRow = 0;

        }

    }//GEN-LAST:event_jMenuItem_vaciarSeleccionActionPerformed

    private void jMenuItem_restaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_restaActionPerformed
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aun no hay celdas seleccionadas");
        } else {
            DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
            int bandera = 0;
            double n = 0;
            for (int i = 0; i < seleccionGlobal.size(); i++) {
                if (isNumeric(seleccionGlobal.get(i).toString()) && i == 0) {
                    n = Double.parseDouble(seleccionGlobal.get(i).toString());
                } else if (isNumeric(seleccionGlobal.get(i).toString())) {
                    n -= Double.parseDouble(seleccionGlobal.get(i).toString());
                } else {
                    bandera++;
                }
            }

            if (bandera > 0) {
                JOptionPane.showMessageDialog(this, "Una de las celdas seleccionadas no era numerica");
            } else {
                modelo.setValueAt(n, Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
            }
        }

    }//GEN-LAST:event_jMenuItem_restaActionPerformed

    private void jMenuItem_multiplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_multiplicacionActionPerformed
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aun no hay celdas seleccionadas");
        } else {
            DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
            int bandera = 0;
            double n = 0;
            for (int i = 0; i < seleccionGlobal.size(); i++) {
                if (isNumeric(seleccionGlobal.get(i).toString()) && i == 0) {
                    n = Double.parseDouble(seleccionGlobal.get(i).toString());
                } else if (isNumeric(seleccionGlobal.get(i).toString())) {
                    n *= Double.parseDouble(seleccionGlobal.get(i).toString());
                } else {
                    bandera++;
                }
            }

            if (bandera > 0) {
                JOptionPane.showMessageDialog(this, "Una de las celdas seleccionadas no era numerica");
            } else {
                modelo.setValueAt(n, Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
            }
        }

    }//GEN-LAST:event_jMenuItem_multiplicacionActionPerformed

    private void jMenuItem_divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_divisionActionPerformed
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aun no hay celdas seleccionadas");
        } else {
            DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
            int bandera = 0;
            int bandera2 = 0;
            double n = 1;
            for (int i = 0; i < seleccionGlobal.size(); i++) {
                if (isNumeric(seleccionGlobal.get(i).toString()) && i == 0) {
                    n = Double.parseDouble(seleccionGlobal.get(i).toString());
                } else if (isNumeric(seleccionGlobal.get(i).toString())) {
                    double d = Double.parseDouble(seleccionGlobal.get(i).toString());
                    if (d == 0) {
                        bandera2++;
                        i = seleccionGlobal.size() - 1;
                    } else {
                        n /= Double.parseDouble(seleccionGlobal.get(i).toString());
                    }
                } else {
                    bandera++;
                }
            }

            if (bandera > 0) {
                JOptionPane.showMessageDialog(this, "Una de las celdas seleccionadas no era numerica");
            } else if (bandera2 > 0) {
                JOptionPane.showMessageDialog(this, "No se puede dividir por cero");
            } else {
                modelo.setValueAt(n, Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
            }
        }

    }//GEN-LAST:event_jMenuItem_divisionActionPerformed

    private void jMenuItem_PromedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_PromedioActionPerformed
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aun no hay celdas seleccionadas");
        } else {
            DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
            int bandera = 0;
            double n = 0;
            for (int i = 0; i < seleccionGlobal.size(); i++) {
                if (isNumeric(seleccionGlobal.get(i).toString())) {
                    n += Double.parseDouble(seleccionGlobal.get(i).toString());
                } else {
                    bandera++;
                }
            }

            if (bandera > 0) {
                JOptionPane.showMessageDialog(this, "Una de las celdas seleccionadas no era numerica");
            } else {
                n = n / seleccionGlobal.size();
                modelo.setValueAt(n, Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
            }
        }

    }//GEN-LAST:event_jMenuItem_PromedioActionPerformed

    private void jMenuItem_exponenciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_exponenciarActionPerformed
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aun no hay celdas seleccionadas");
        } else if (seleccionGlobal.size() > 1) {
            JOptionPane.showMessageDialog(this, "Solo puede seleccionar una celda");
        } else {
            if (isNumeric(seleccionGlobal.get(0).toString())) {
                DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
                double a = Double.parseDouble(seleccionGlobal.get(0).toString());
                double b = Double.parseDouble(JOptionPane.showInputDialog(this, "Ingrese el exponente"));
                double c = Math.pow(a, b);
                modelo.setValueAt(c, Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
                Jtable_Main.setModel(modelo);
            } else {
                JOptionPane.showMessageDialog(this, "La celda seleccionada no es numerica");
            }
        }

    }//GEN-LAST:event_jMenuItem_exponenciarActionPerformed

    private void jMenuItem_numeroAleatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_numeroAleatorioActionPerformed
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aun no hay celdas seleccionadas");
        } else {
            DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
            int bandera = 0;
            double n = 0;
            for (int i = 0; i < seleccionGlobal.size(); i++) {
                if (isNumeric(seleccionGlobal.get(i).toString())) {
                } else {
                    bandera++;
                }
            }

            if (bandera > 0) {
                JOptionPane.showMessageDialog(this, "Una de las celdas seleccionadas no era numerica");
            } else {
                Collections.shuffle(seleccionGlobal);
                n = Double.parseDouble(seleccionGlobal.get(0).toString());
                modelo.setValueAt(n, Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
            }
        }

    }//GEN-LAST:event_jMenuItem_numeroAleatorioActionPerformed

    private void jb_barraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_barraMouseClicked
        // TODO add your handling code here:
        jpanel_grafico.removeAll();
        DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
        String rowKey = JOptionPane.showInputDialog(jFrame_Test, "Ingrese el identificador");
        DefaultCategoryDataset datos = new DefaultCategoryDataset();
        int bandera = 0;
        double n = 0;
        for (int i = 0; i < seleccionGlobal.size(); i++) {
            if (isNumeric(seleccionGlobal.get(i).toString())) {
                n = Double.parseDouble(seleccionGlobal.get(i).toString());
                String columnKey = JOptionPane.showInputDialog(jFrame_Test, "Ingrese la columna");
                datos.setValue(n, rowKey, columnKey);
            } else {
                bandera++;
            }
        }
        if (bandera > 0) {
            JOptionPane.showMessageDialog(jFrame_Test, "Error en los datos");
        } else {
            String titulo = JOptionPane.showInputDialog(jFrame_Test, "Ingrese el titulo del grafico");
            String categoriaX = JOptionPane.showInputDialog(jFrame_Test, "Ingrese la cateogor√≠a del eje x");
            String categoriaY = JOptionPane.showInputDialog(jFrame_Test, "Ingrese la cateogor√≠a del eje y");
            JFreeChart grafico_barras = ChartFactory.createBarChart3D(titulo, categoriaX, categoriaY, datos, PlotOrientation.VERTICAL, true, true, false);
            ChartPanel panel = new ChartPanel(grafico_barras);
            panel.setMouseWheelEnabled(true);

            panel.setPreferredSize(new Dimension(500, 400));
            jpanel_grafico.setLayout(new BorderLayout());
            jpanel_grafico.add(panel, BorderLayout.NORTH);

            //        pack();
            repaint();

            jd_opcionesGraficos.setVisible(false);

            jd_grafico.pack();
            jd_grafico.setModal(true);
            jd_grafico.setLocationRelativeTo(jFrame_Test);
            jd_grafico.setVisible(true);
        }


    }//GEN-LAST:event_jb_barraMouseClicked

    private void jb_pastelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_pastelMouseClicked
        // TODO add your handling code here:
        DefaultPieDataset data = new DefaultPieDataset();
        int bandera = 0;
        double n = 0;
        for (int i = 0; i < seleccionGlobal.size(); i++) {
            if (isNumeric(seleccionGlobal.get(i).toString())) {
                n = Double.parseDouble(seleccionGlobal.get(i).toString());
                String columnKey = JOptionPane.showInputDialog(jFrame_Test, "Ingrese el objeto del data");
                data.setValue(columnKey, n);
            } else {
                bandera++;
            }
        }

        if (bandera > 0) {
            JOptionPane.showMessageDialog(jFrame_Test, "Error en los datos");
        } else {
            String titulo = JOptionPane.showInputDialog(jFrame_Test, "Ingrese el titulo del grafico");
            JFreeChart pieChart = ChartFactory.createPieChart3D(titulo, data, true, true, false);
            PiePlot3D plot = (PiePlot3D) pieChart.getPlot();
            ChartFrame frame = new ChartFrame("Grafico", pieChart);

            frame.setLocationRelativeTo(jFrame_Test);
            frame.setVisible(true);
            frame.setSize(500, 500);

            jd_opcionesGraficos.setVisible(false);
        }


    }//GEN-LAST:event_jb_pastelMouseClicked

    private void jMenuItem_GraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_GraficarActionPerformed
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aun no hay celdas seleccionadas");
        } else {
            jd_opcionesGraficos.pack();
            jd_opcionesGraficos.setModal(true);
            jd_opcionesGraficos.setLocationRelativeTo(jFrame_Test);
            jd_opcionesGraficos.setVisible(true);
        }

    }//GEN-LAST:event_jMenuItem_GraficarActionPerformed

    private void jFrame_TestWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jFrame_TestWindowClosed
        // TODO add your handling code here:
        this.setVisible(true);
    }//GEN-LAST:event_jFrame_TestWindowClosed

    private void jButton_guardarProyectoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_guardarProyectoMouseClicked
        // TODO add your handling code here:
        for (int i = 0; i < proyectos.size(); i++) {
            if (proyectos.get(i).getCodigo().equals(proyectoActual.getCodigo())) {
                ProjectTest c = proyectoActual;
                proyectos.get(i).setNombre(c.getNombre());
                proyectos.get(i).setCreador(c.getCreador());
                proyectos.get(i).setFechaCreacion(c.getFechaCreacion());
                proyectos.get(i).setTablas(c.getTablas());
            }
        }

        if (proyectos.isEmpty() == false) {
            jcb_proyectos.removeAllItems();
            DefaultComboBoxModel modelo = (DefaultComboBoxModel) jcb_proyectos.getModel();
            for (int i = 0; i < proyectos.size(); i++) {
                modelo.addElement(proyectos.get(i));
            }

            jcb_proyectos.setModel(modelo);
        }

        JOptionPane.showMessageDialog(jFrame_Test, "Se guardo el proyecto con √©xito");

        adminProjects ap = new adminProjects("./Proyectos.cbm");
        ap.setProyectos(proyectos);
        ap.escribirArchivo();

    }//GEN-LAST:event_jButton_guardarProyectoMouseClicked

    private void jButton_cargarProyectoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_cargarProyectoMouseClicked
        // TODO add your handling code here:
        if (proyectos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Aun no hay proyectos");
        } else {
            jcb_hojas.removeAllItems();
            for (int i = 0; i < proyectos.size(); i++) {
                DefaultComboBoxModel modelo = (DefaultComboBoxModel) jcb_proyectos.getModel();
                if (((ProjectTest) modelo.getSelectedItem()).getCodigo().equals(proyectos.get(i).getCodigo())) {
                    proyectoActual = proyectos.get(i);
                    DefaultComboBoxModel modeloCB = (DefaultComboBoxModel) jcb_hojas.getModel();
                    for (int j = 0; j < proyectoActual.getTablas().size(); j++) {
                        modeloCB.addElement(proyectoActual.getTablas().get(j));
                    }
                    jcb_hojas.setModel(modeloCB);

                    jFrame_Test.setVisible(true);
                    jFrame_Test.setExtendedState(MAXIMIZED_BOTH);

                }
            }

        }


    }//GEN-LAST:event_jButton_cargarProyectoMouseClicked

    private void jButton_negritaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_negritaMouseClicked
        // TODO add your handling code here:
        try {
            StyleConstants.setBold(estilo, true);

            doc.setCharacterAttributes(tp_texto.getSelectionStart(),
                    tp_texto.getSelectionEnd() - tp_texto.getSelectionStart(),
                    tp_texto.getStyle("miEstilo"),
                    true);
        } catch (Exception ex) {
        }

    }//GEN-LAST:event_jButton_negritaMouseClicked

    private void jcb_sizeStringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_sizeStringActionPerformed
        // TODO add your handling code here:
        StyleConstants.setFontSize(estilo, Integer.parseInt(jcb_sizeString.getSelectedItem().toString()));
        doc.setCharacterAttributes(tp_texto.getSelectionStart(),
                tp_texto.getSelectionEnd() - tp_texto.getSelectionStart(),
                tp_texto.getStyle("miEstilo"),
                true);
    }//GEN-LAST:event_jcb_sizeStringActionPerformed

    private void jButton_cursivaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_cursivaMouseClicked
        // TODO add your handling code here:
        try {
            StyleConstants.setItalic(estilo, true);

            doc.setCharacterAttributes(tp_texto.getSelectionStart(),
                    tp_texto.getSelectionEnd() - tp_texto.getSelectionStart(),
                    tp_texto.getStyle("miEstilo"),
                    true);
        } catch (Exception ex) {
        }

    }//GEN-LAST:event_jButton_cursivaMouseClicked

    private void jButton_subrayarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_subrayarMouseClicked
        // TODO add your handling code here:
        try {
            StyleConstants.setUnderline(estilo, true);

            doc.setCharacterAttributes(tp_texto.getSelectionStart(),
                    tp_texto.getSelectionEnd() - tp_texto.getSelectionStart(),
                    tp_texto.getStyle("miEstilo"),
                    true);
        } catch (Exception ex) {
        }

    }//GEN-LAST:event_jButton_subrayarMouseClicked

    private void jButton_fondoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_fondoMouseClicked
        // TODO add your handling code here:
        try {
            Color c = JColorChooser.showDialog(jFrame_Test, "Elija un color ", Color.yellow);
            StyleConstants.setBackground(estilo, c);
            doc.setCharacterAttributes(tp_texto.getSelectionStart(), tp_texto.getSelectionEnd() - tp_texto.getSelectionStart(), tp_texto.getStyle("miEstilo"), true);
            MiRenderer renderer = new MiRenderer(0, 1, c, c);
            Jtable_Main.setDefaultRenderer(Object.class, renderer);
            
        } catch (Exception ex) {
        }

    }//GEN-LAST:event_jButton_fondoMouseClicked

    private void jButton_letraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_letraMouseClicked
        // TODO add your handling code here:
        try {
            StyleConstants.setForeground(estilo,
                    JColorChooser.showDialog(this,
                            "Seleccione Color", Color.red)
            );

            doc.setCharacterAttributes(tp_texto.getSelectionStart(),
                    tp_texto.getSelectionEnd() - tp_texto.getSelectionStart(),
                    tp_texto.getStyle("miEstilo"),
                    true);
        } catch (Exception ex) {
        }

    }//GEN-LAST:event_jButton_letraMouseClicked

    private void jcb_StyleFormatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcb_StyleFormatItemStateChanged
        // TODO add your handling code here:
        StyleConstants.setFontFamily(estilo, jcb_StyleFormat.getSelectedItem().toString());
        //StyleConstants.setFontSize(estilo, Integer.parseInt(cb_tama√±o.getSelectedItem().toString()));
        doc.setCharacterAttributes(tp_texto.getSelectionStart(),
                tp_texto.getSelectionEnd() - tp_texto.getSelectionStart(),
                tp_texto.getStyle("miEstilo"),
                true);
    }//GEN-LAST:event_jcb_StyleFormatItemStateChanged

    private void jButton_aplicarCeldaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_aplicarCeldaMouseClicked
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty()) {
            JOptionPane.showMessageDialog(jFrame_Test, "Aun no hay una celda seleccionada");
        } else if (seleccionGlobal.size() > 1) {
            JOptionPane.showMessageDialog(jFrame_Test, "Solo se puede seleccionar una celda");
        } else {
            MiRenderer renderer = new MiRenderer();
            Jtable_Main.setDefaultRenderer(Object.class, renderer);
        }

    }//GEN-LAST:event_jButton_aplicarCeldaMouseClicked

    private void jMenuItem_guardarProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_guardarProyectoActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < proyectos.size(); i++) {
            if (proyectos.get(i).getCodigo().equals(proyectoActual.getCodigo())) {
                ProjectTest c = proyectoActual;
                proyectos.get(i).setNombre(c.getNombre());
                proyectos.get(i).setCreador(c.getCreador());
                proyectos.get(i).setFechaCreacion(c.getFechaCreacion());
                proyectos.get(i).setTablas(c.getTablas());
            }
        }

        if (proyectos.isEmpty() == false) {
            jcb_proyectos.removeAllItems();
            DefaultComboBoxModel modelo = (DefaultComboBoxModel) jcb_proyectos.getModel();
            for (int i = 0; i < proyectos.size(); i++) {
                modelo.addElement(proyectos.get(i));
            }

            jcb_proyectos.setModel(modelo);
        }

        JOptionPane.showMessageDialog(jFrame_Test, "Se guardo la hoja con √©xito");

        adminProjects ap = new adminProjects("./Proyectos.cbm");
        ap.setProyectos(proyectos);
        ap.escribirArchivo();

    }//GEN-LAST:event_jMenuItem_guardarProyectoActionPerformed

    private void jMenuItem_CrearNuevaHojaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CrearNuevaHojaActionPerformed
        // TODO add your handling code here:
        jcb_hojas.removeAllItems();
        String s = JOptionPane.showInputDialog(jFrame_Test, "Ingrese el nombre de la Hoja");
        proyectoActual.generarTabla(s);
        DefaultComboBoxModel modeloCB = (DefaultComboBoxModel) jcb_hojas.getModel();
        for (int i = 0; i < proyectoActual.getTablas().size(); i++) {
            modeloCB.addElement(proyectoActual.getTablas().get(i));
        }
        jcb_hojas.setModel(modeloCB);

    }//GEN-LAST:event_jMenuItem_CrearNuevaHojaActionPerformed

    private void jMenuItem_GuardarHojaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_GuardarHojaActionPerformed
        // TODO add your handling code here:
        DefaultComboBoxModel modeloCB = (DefaultComboBoxModel) jcb_hojas.getModel();
        for (int i = 0; i < proyectoActual.getTablas().size(); i++) {
            if (((Tabla) modeloCB.getElementAt(jcb_hojas.getSelectedIndex())).getCodigo().equals(proyectoActual.getTablas().get(i).getCodigo())) {
                DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
                for (int k = 0; k < modelo.getColumnCount(); k++) {
                    for (int l = 0; l < modelo.getRowCount(); l++) {
                        proyectoActual.getTablas().get(i).setValueAt(modelo.getValueAt(l, k), l, k);
                    }
                }
            }

        }

        JOptionPane.showMessageDialog(jFrame_Test, "Se guardo la hoja con √©xito");

    }//GEN-LAST:event_jMenuItem_GuardarHojaActionPerformed

    private void jMenuItem_CargarHojaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CargarHojaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
        for (int i = 0; i < modelo.getColumnCount(); i++) {
            for (int j = 0; j < modelo.getRowCount(); j++) {
                modelo.setValueAt(proyectoActual.getTablas().get(jcb_hojas.getSelectedIndex()).getValueAt(j, i), j, i);
            }
        }
        Jtable_Main.setModel(modelo);

    }//GEN-LAST:event_jMenuItem_CargarHojaActionPerformed

    private void jButton_VaciarHojaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_VaciarHojaMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelo1 = (DefaultTableModel) Jtable_Main.getModel();
        for (int i = 1; i < modelo1.getColumnCount(); i++) {
            for (int j = 0; j < modelo1.getRowCount(); j++) {
                modelo1.setValueAt("", j, i);
            }
        }

        Jtable_Main.setModel(modelo1);

    }//GEN-LAST:event_jButton_VaciarHojaMouseClicked

    private void jb_linealMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_linealMouseClicked
        // TODO add your handling code here:
        jpanel_grafico.removeAll();
        DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
        String rowKey = JOptionPane.showInputDialog(jFrame_Test, "Ingrese el indentificador");
        DefaultCategoryDataset datos = new DefaultCategoryDataset();
        int bandera = 0;
        double n = 0;
        for (int i = 0; i < seleccionGlobal.size(); i++) {
            if (isNumeric(seleccionGlobal.get(i))) {
                n = Double.parseDouble(seleccionGlobal.get(i));
                String columnKey = JOptionPane.showInputDialog(jFrame_Test, "Ingrese la columna");
                datos.setValue(n, rowKey, columnKey);
            } else {
                bandera++;
            }
        }
        if (bandera > 0) {
            JOptionPane.showMessageDialog(jFrame_Test, "Error en los datos");
        } else {
            String titulo = JOptionPane.showInputDialog(jFrame_Test, "Ingrese el titulo del grafico");
            String categoriaX = JOptionPane.showInputDialog(jFrame_Test, "Ingrese la cateogor√≠a del eje x");
            String categoriaY = JOptionPane.showInputDialog(jFrame_Test, "Ingrese la cateogor√≠a del eje y");
            JFreeChart grafico_barras = ChartFactory.createLineChart3D(titulo, categoriaX, categoriaY, datos, PlotOrientation.VERTICAL, true, true, false);
            ChartPanel panel = new ChartPanel(grafico_barras);
            panel.setMouseWheelEnabled(true);

            panel.setPreferredSize(new Dimension(500, 400));
            jpanel_grafico.setLayout(new BorderLayout());
            jpanel_grafico.add(panel, BorderLayout.NORTH);

            //        pack();
            repaint();

            jd_opcionesGraficos.setVisible(false);

            jd_grafico.pack();
            jd_grafico.setModal(true);
            jd_grafico.setLocationRelativeTo(jFrame_Test);
            jd_grafico.setVisible(true);
        }


    }//GEN-LAST:event_jb_linealMouseClicked

    private void tp_textoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tp_textoMouseClicked
        // TODO add your handling code here:
        if (Jtable_Main.getSelectedRow() >= 0) {
            DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();

            if (tp_texto.getText().contains("+")) {
                for (int i = 0; i < proyectoActual.getTablas().get(0).getCeldas().size(); i++) {
                    if (proyectoActual.getTablas().get(0).getCeldas().get(i).getNombre().equals("A1") || proyectoActual.getTablas().get(0).getCeldas().get(i).getNombre().equals("A1")) {
                        double d = Double.parseDouble(proyectoActual.getTablas().get(0).getCeldas().get(i).getValor());
                        String s = "" + d;
                        tp_texto.setText(s);
                    }
                }
            }

            modelo.setValueAt(tp_texto.getText(), Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
            Jtable_Main.setModel(modelo);
        }

    }//GEN-LAST:event_tp_textoMouseClicked

    private void jButton_fxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_fxMouseClicked
        // TODO add your handling code here:
        jd_funciones.pack();
        jd_funciones.setModal(true);
        jd_funciones.setLocationRelativeTo(jFrame_Test);
        jd_funciones.setVisible(true);

    }//GEN-LAST:event_jButton_fxMouseClicked

    private void jMenuItem_referenciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_referenciarActionPerformed
        // TODO add your handling code here:
        String s = JOptionPane.showInputDialog(jFrame_Test, "Ingrese la celda que desea referenciar");

        try {
            for (int i = 0; i < proyectoActual.getTablas().get(jcb_hojas.getSelectedIndex()).getCeldas().size(); i++) {
                if (proyectoActual.getTablas().get(jcb_hojas.getSelectedIndex()).getCeldas().get(i).getNombre().equals(s)) {
                    proyectoActual.getTablas().get(jcb_hojas.getSelectedIndex()).getCeldas().get(i).setReferencia(true);

                }
            }

        } catch (Exception e) {
        }

    }//GEN-LAST:event_jMenuItem_referenciarActionPerformed

    private void jButton_buscarVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_buscarVMouseClicked
        // TODO add your handling code here:
        jd_funciones.setVisible(false);
        jd_buscarV.pack();
        jd_buscarV.setLocationRelativeTo(jFrame_Test);
        jd_buscarV.setVisible(true);

    }//GEN-LAST:event_jButton_buscarVMouseClicked

    private void jButton_buscarEnVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_buscarEnVMouseClicked
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty() || seleccionGlobal.size() > 1) {
            JOptionPane.showMessageDialog(jFrame_Test, "No hay una celda seleccionada");
        } else if (matrix.isEmpty()) {
            JOptionPane.showMessageDialog(jFrame_Test, "No hay una matriz seleccionada");
        } else {
            int bandera = 0;
            String valorBuscado = jTextField_valorBuscado.getText();
            int columnaIngresada = Integer.parseInt(jTextField_columnaBuscaV.getText());

            if (columnaIngresada > finalColumn || columnaIngresada < initialColumn) {
                bandera++;
            }
            int filaValor = 0;
            int columnaValor = columnaIngresada - initialColumn + 1 - 1;
            for (int i = 0; i < matrix.size(); i++) {
                for (int j = 0; j < matrix.get(i).size(); j++) {
                    if (valorBuscado.equals(matrix.get(i).get(j))) {
                        filaValor = j;
                        bandera++;
                    }
                }
            }

            if (bandera == 0) {
                JOptionPane.showMessageDialog(jFrame_Test, "No se encontro el valor ingresado");
            } else {
                Jtable_Main.setValueAt(matrix.get(columnaValor).get(filaValor), Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
                jd_buscarV.setVisible(false);
                jTextField_columnaBuscaV.setText("");
                jTextField_valorBuscado.setText("");
            }
            jTextField_columnaBuscaV.setText("");
            jTextField_valorBuscado.setText("");

        }

    }//GEN-LAST:event_jButton_buscarEnVMouseClicked

    private void jcb_proyectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_proyectosActionPerformed
        // TODO add your handling code here:
        jLabel_creador.setText(((ProjectTest) jcb_proyectos.getSelectedItem()).getCreador());
        jLabel_fecha.setText(((ProjectTest) jcb_proyectos.getSelectedItem()).getFechaCreacion().toString());

    }//GEN-LAST:event_jcb_proyectosActionPerformed

    private void jButton_buscarHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_buscarHMouseClicked
        // TODO add your handling code here:
        jd_funciones.setVisible(false);
        jd_buscarH.pack();
        jd_buscarH.setLocationRelativeTo(jFrame_Test);
        jd_buscarH.setVisible(true);

    }//GEN-LAST:event_jButton_buscarHMouseClicked

    private void jButton_buscarEnHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_buscarEnHMouseClicked
        // TODO add your handling code here:
        if (seleccionGlobal.isEmpty() || seleccionGlobal.size() > 1) {
            JOptionPane.showMessageDialog(jFrame_Test, "No hay una celda seleccionada");
        } else if (matrix.isEmpty()) {
            JOptionPane.showMessageDialog(jFrame_Test, "No hay una matriz seleccionada");
        } else {
            int bandera = 0;
            String valorBuscado = jTextField_valorBuscadoH.getText();
            int filaIngresada = Integer.parseInt(jTextField_filaBuscaH.getText());

            if (filaIngresada > finalRow || filaIngresada < initialRow) {
                bandera++;
            }
            int columnaValor = 0;
            int filaValor = filaIngresada - initialRow;

            for (int i = 0; i < matrix.size(); i++) {
                for (int j = 0; j < matrix.get(i).size(); j++) {
                    if (valorBuscado.equals(matrix.get(i).get(j))) {
                        columnaValor = i;
                        bandera++;
                    }
                }
            }

            if (bandera == 0) {
                JOptionPane.showMessageDialog(jFrame_Test, "No se encontro el valor ingresado");
            } else {
                Jtable_Main.setValueAt(matrix.get(columnaValor).get(filaValor), Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
                jd_buscarH.setVisible(false);
                jTextField_filaBuscaH.setText("");
                jTextField_valorBuscadoH.setText("");
            }

            jTextField_filaBuscaH.setText("");
            jTextField_valorBuscadoH.setText("");
        }

    }//GEN-LAST:event_jButton_buscarEnHMouseClicked

    private void jMenuItem_guardarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_guardarCSVActionPerformed
        // TODO add your handling code here:
        if (matrix.isEmpty() == false) {
            String s = JOptionPane.showInputDialog(jFrame_Test, "Ingrese el nombre del nuevo Archivo CSV");
            String path = "./" + s + ".txt";
            File archivo = null;
            FileWriter fw = null;
            BufferedWriter bw = null;
            try {
                archivo = new File(path);
                fw = new FileWriter(archivo);
                bw = new BufferedWriter(fw);
                for (int i = 0; i < matrix.size(); i++) {
                    for (int j = 0; j < matrix.get(i).size(); j++) {
                        if (j == matrix.get(i).size() - 1) {
                            bw.write(matrix.get(i).get(j) + ";");
                        } else {
                            bw.write(matrix.get(i).get(j) + ",");
                        }
                    }
                }

                bw.flush();

                bw.close();
                fw.close();
            } catch (Exception e) {
            }

            JOptionPane.showMessageDialog(jFrame_Test, "Se guardo el CSV con √©xito");
        } else{
            JOptionPane.showMessageDialog(jFrame_Test, "No hay una matriz seleccionada");
        }


    }//GEN-LAST:event_jMenuItem_guardarCSVActionPerformed

    private void jMenuItem_cargarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_cargarCSVActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jMenuItem_cargarCSVActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    public void Copiar() {

        if (Jtable_Main.getSelectedRow() >= 0) {
            DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
            if (modelo.getValueAt(Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn()).equals("") == false) {
                copiar = modelo.getValueAt(Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
                Jtable_Main.setModel(modelo);
            }
        }

    }

    public void Pegar() {
        if (Jtable_Main.getSelectedRow() >= 0) {
            if (copiar.equals("") == false) {
                DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
                modelo.setValueAt(copiar, Jtable_Main.getSelectedRow(), Jtable_Main.getSelectedColumn());
                Jtable_Main.setModel(modelo);
            }
        }
    }

    public void AddColumnas() {
        DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
        int a = 65;
        char c = 'a';
        for (int i = 0; i < 26; i++) {
            c = (char) a;
            modelo.addColumn(c);
            a++;
        }

        Jtable_Main.setModel(modelo);
    }

    public void AddFilas() {
        DefaultTableModel modelo = (DefaultTableModel) Jtable_Main.getModel();
        for (int i = 1; i < 51; i++) {
            Object[] newRow = {i};
            modelo.addRow(newRow);
        }

        Jtable_Main.setModel(modelo);
    }

    public static boolean isNumeric(String strNum) {
        if (strNum == null) {
            return false;
        }
        try {
            double d = Double.parseDouble(strNum);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Jtable_Main;
    private javax.swing.JPopupMenu Popup_Column;
    private javax.swing.JPopupMenu Popup_tabla;
    private javax.swing.JButton jButton_VaciarHoja;
    private javax.swing.JButton jButton_aplicarCelda;
    private javax.swing.JButton jButton_buscarEnH;
    private javax.swing.JButton jButton_buscarEnV;
    private javax.swing.JButton jButton_buscarH;
    private javax.swing.JButton jButton_buscarV;
    private javax.swing.JButton jButton_cargar;
    private javax.swing.JButton jButton_cargarProyecto;
    private javax.swing.JButton jButton_crearHoja;
    private javax.swing.JButton jButton_crearProyecto;
    private javax.swing.JButton jButton_cursiva;
    private javax.swing.JButton jButton_fondo;
    private javax.swing.JButton jButton_fx;
    private javax.swing.JButton jButton_guardar;
    private javax.swing.JButton jButton_guardarProyecto;
    private javax.swing.JButton jButton_letra;
    private javax.swing.JButton jButton_negrita;
    private javax.swing.JButton jButton_siSiNo;
    private javax.swing.JButton jButton_subrayar;
    private javax.swing.JFrame jFrame_Test;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_creador;
    private javax.swing.JLabel jLabel_fecha;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem_CargarHoja;
    private javax.swing.JMenuItem jMenuItem_Copiar;
    private javax.swing.JMenuItem jMenuItem_CrearNuevaHoja;
    private javax.swing.JMenuItem jMenuItem_Graficar;
    private javax.swing.JMenuItem jMenuItem_GuardarHoja;
    private javax.swing.JMenuItem jMenuItem_Pegar;
    private javax.swing.JMenuItem jMenuItem_Promedio;
    private javax.swing.JMenuItem jMenuItem_cargarCSV;
    private javax.swing.JMenuItem jMenuItem_division;
    private javax.swing.JMenuItem jMenuItem_exponenciar;
    private javax.swing.JMenuItem jMenuItem_guardarCSV;
    private javax.swing.JMenuItem jMenuItem_guardarProyecto;
    private javax.swing.JMenuItem jMenuItem_multiplicacion;
    private javax.swing.JMenuItem jMenuItem_numeroAleatorio;
    private javax.swing.JMenuItem jMenuItem_referenciar;
    private javax.swing.JMenuItem jMenuItem_resta;
    private javax.swing.JMenuItem jMenuItem_seleccionar;
    private javax.swing.JMenuItem jMenuItem_suma;
    private javax.swing.JMenuItem jMenuItem_vaciarSeleccion;
    private javax.swing.JMenu jMenu_Archivo;
    private javax.swing.JMenu jMenu_Texto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JTextField jTextField_columnaBuscaV;
    private javax.swing.JTextField jTextField_filaBuscaH;
    private javax.swing.JTextField jTextField_valorBuscado;
    private javax.swing.JTextField jTextField_valorBuscadoH;
    private javax.swing.JToolBar jToolBar_EstiloCelda;
    private javax.swing.JButton jb_barra;
    private javax.swing.JButton jb_lineal;
    private javax.swing.JButton jb_pastel;
    private javax.swing.JComboBox<String> jcb_StyleFormat;
    private javax.swing.JComboBox<Tabla> jcb_hojas;
    private javax.swing.JComboBox<ProjectTest> jcb_proyectos;
    private javax.swing.JComboBox<String> jcb_sizeString;
    private javax.swing.JDialog jd_buscarH;
    private javax.swing.JDialog jd_buscarV;
    private javax.swing.JDialog jd_funciones;
    private javax.swing.JDialog jd_grafico;
    private javax.swing.JDialog jd_opcionesGraficos;
    private javax.swing.JPanel jpanel_grafico;
    private javax.swing.JTextPane tp_texto;
    // End of variables declaration//GEN-END:variables

    ArrayList<String> seleccionGlobal = new ArrayList();
    ArrayList<ArrayList<String>> matrix = new ArrayList<ArrayList<String>>();
    int initialRow, initialColumn, finalRow, finalColumn;
    Object copiar;
    ProjectTest proyectoActual;
    ArrayList<ProjectTest> proyectos = new ArrayList();
    StyledDocument doc;
    Style estilo;

}
